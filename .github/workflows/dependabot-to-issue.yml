- name: Create issues for high/critical alerts only
  uses: actions/github-script@v7
  with:
    script: |
      // Parseamos la salida JSON del paso anterior
      const alerts = JSON.parse(process.env.ALERTS_PAYLOAD);

      for (const alert of alerts) {
        const severity = alert.security_advisory.severity.toLowerCase();
        if (!['high', 'critical'].includes(severity)) continue;

        const pkg = alert.dependency.package;
        const summary = alert.security_advisory.summary;
        const description = alert.security_advisory.description;

        // Construimos el título del issue (versión sin backticks)
        const title = "🚨 [" + severity.toUpperCase() + "] "
          + summary + " in " + pkg.ecosystem + ":" + pkg.name;

        // Construimos el cuerpo del issue sin backticks
        const body = [
          "### ⚠️ Vulnerabilidad detectada (Severidad: " + severity.toUpperCase() + ")",
          "",
          "**Paquete afectado:** `" + pkg.name + "`  ",
          "**Ecosistema:** " + pkg.ecosystem + "  ",
          "**Vulnerabilidad:** " + summary + "  ",
          "",
          "**Descripción completa:**  ",
          description,
          "",
          "**Dependabot URL:** [Ver alerta en GitHub](" + alert.html_url + ")",
          "",
          "---",
          "",
          "Este issue ha sido generado automáticamente para alertar sobre vulnerabilidades de severidad alta o crítica."
        ].join("\n");

        // Verificar si ya existe un issue abierto con este título
        const { data: existingIssues } = await github.rest.issues.listForRepo({
          owner: context.repo.owner,
          repo: context.repo.repo,
          state: "open",
          labels: "dependabot,security"
        });

        const alreadyExists = existingIssues.find(i => i.title === title);
        if (!alreadyExists) {
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ["dependabot", "security"]
          });
        }
      }
  env:
    ALERTS_PAYLOAD: ${{ toJson(steps.fetch_alerts.outputs.result) }}
