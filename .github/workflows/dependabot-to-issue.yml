name: Create High/Critical Dependabot Issues

on:
  workflow_dispatch:

jobs:
  create-issues:
    runs-on: ubuntu-latest
    permissions:
      security-events: read
      issues: write

    steps:
      - name: Fetch open Dependabot alerts
        id: fetch_alerts
        uses: actions/github-script@v7
        with:
          script: |
            const response = await github.rest.dependabot.listAlertsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "open",
              per_page: 100
            });
            return response.data;

      - name: Create issues for high/critical alerts only
        uses: actions/github-script@v7
        with:
          script: |
            const alerts = JSON.parse(process.env.ALERTS_PAYLOAD);
            for (const alert of alerts) {
              const severity = alert.security_advisory.severity.toLowerCase();
              if (severity !== 'high' && severity !== 'critical') {
                continue;
              }

              const pkg = alert.dependency.package;
              const summary = alert.security_advisory.summary;
              const description = alert.security_advisory.description;
              const title = `🚨 [${severity.toUpperCase()}] ${summary} in ${pkg.ecosystem}:${pkg.name}`;
              const body = `### ⚠️ Vulnerabilidad detectada (Severidad: ${severity.toUpperCase()})

**Paquete afectado:** \`${pkg.name}\`  
**Ecosistema:** ${pkg.ecosystem}  
**Vulnerabilidad:** ${summary}  

**Descripción completa:**  
${description}

**Dependabot URL:** [Ver alerta en GitHub](${alert.html_url})

---

Este issue ha sido generado automáticamente para alertar sobre vulnerabilidades de severidad alta o crítica.`;

              // Verificar si ya existe un issue con este título abierto
              const { data: existingIssues } = await github.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: "open",
                labels: "dependabot,security"
              });
              const alreadyExists = existingIssues.find(i => i.title === title);

              if (!alreadyExists) {
                await github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: title,
                  body: body,
                  labels: ["dependency", "security"]
                });
              }
            }
        env:
          ALERTS_PAYLOAD: ${{ toJson(steps.fetch_alerts.outputs.result) }}
